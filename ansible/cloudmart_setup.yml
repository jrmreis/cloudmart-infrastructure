---
# Ansible playbook for deploying CloudMart applications to Kubernetes
# Path: /home/joel/Downloads/cloudmart-infrastructure-homol (2)/cloudmart-infrastructure-homol/ansible/playbooks/main.yml

- name: Deploy CloudMart applications to Kubernetes
  hosts: localhost
  connection: local
  gather_facts: yes
  
  vars:
    aws_region: us-east-1
    backend_port: 5000
    frontend_port: 5001
    backend_image: "{{ lookup('env', 'AWS_ACCOUNT_ID') }}.dkr.ecr.{{ aws_region }}.amazonaws.com/cloudmart-backend:latest"
    frontend_image: "{{ lookup('env', 'AWS_ACCOUNT_ID') }}.dkr.ecr.{{ aws_region }}.amazonaws.com/cloudmart-frontend:latest"
    project_dir: "/home/ec2-user/cloudmart-infrastructure"
    backend_dir: "{{ project_dir }}/challenge-day2/backend"
    frontend_dir: "{{ project_dir }}/challenge-day2/frontend"
  
  tasks:
    - name: Create Kubernetes namespace
      kubernetes.core.k8s:
        name: cloudmart
        api_version: v1
        kind: Namespace
        state: present
    
    # Backend Environment Config
    - name: Create backend environment file for Kubernetes
      copy:
        dest: "{{ backend_dir }}/.env_kube"
        content: |
          PORT=5000
          AWS_REGION=us-east-1
          BEDROCK_AGENT_ID=<seu-bedrock-agent-id>
          BEDROCK_AGENT_ALIAS_ID=<seu-bedrock-agent-alias-id>
          OPENAI_API_KEY=<sua-chave-api-openai>
          OPENAI_ASSISTANT_ID=<seu-id-assistente-openai>
        mode: 0600
    
    - name: Create Kubernetes ConfigMap for backend environment
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: cloudmart-backend-config
            namespace: cloudmart
          data:
            PORT: "5000"
            AWS_REGION: "us-east-1"
    
    - name: Create Kubernetes Secret for backend sensitive environment variables
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: cloudmart-backend-secrets
            namespace: cloudmart
          type: Opaque
          stringData:
            BEDROCK_AGENT_ID: "<seu-bedrock-agent-id>"
            BEDROCK_AGENT_ALIAS_ID: "<seu-bedrock-agent-alias-id>"
            OPENAI_API_KEY: "<sua-chave-api-openai>"
            OPENAI_ASSISTANT_ID: "<seu-id-assistente-openai>"
    
    # Frontend Environment Config
    - name: Create frontend environment file for Kubernetes
      copy:
        dest: "{{ frontend_dir }}/.env_kube"
        content: |
          VITE_API_BASE_URL=http://cloudmart-backend-app-service:5000/api
        mode: 0600
    
    - name: Create Kubernetes ConfigMap for frontend environment
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: cloudmart-frontend-config
            namespace: cloudmart
          data:
            VITE_API_BASE_URL: "http://cloudmart-backend-app-service:5000/api"
    
    # Backend Deployment
    - name: Deploy backend to Kubernetes
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: cloudmart-backend-app
            namespace: cloudmart
            labels:
              app: cloudmart-backend-app
              Environment: Development
              Project: CloudMart
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: cloudmart-backend-app
            template:
              metadata:
                labels:
                  app: cloudmart-backend-app
              spec:
                containers:
                - name: cloudmart-backend-app
                  image: "{{ backend_image }}"
                  imagePullPolicy: Always
                  ports:
                  - containerPort: 5000
                  envFrom:
                  - configMapRef:
                      name: cloudmart-backend-config
                  - secretRef:
                      name: cloudmart-backend-secrets
                  resources:
                    requests:
                      memory: "256Mi"
                      cpu: "100m"
                    limits:
                      memory: "512Mi"
                      cpu: "500m"
                  readinessProbe:
                    httpGet:
                      path: /healthz
                      port: 5000
                    initialDelaySeconds: 10
                    periodSeconds: 10
                  livenessProbe:
                    httpGet:
                      path: /healthz
                      port: 5000
                    initialDelaySeconds: 20
                    periodSeconds: 30
    
    # Backend Service
    - name: Create Kubernetes Service for backend
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: cloudmart-backend-app-service
            namespace: cloudmart
            labels:
              app: cloudmart-backend-app
          spec:
            selector:
              app: cloudmart-backend-app
            ports:
            - port: 5000
              targetPort: 5000
              protocol: TCP
            type: ClusterIP
    
    # Frontend Deployment
    - name: Deploy frontend to Kubernetes
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: cloudmart-frontend-app
            namespace: cloudmart
            labels:
              app: cloudmart-frontend-app
              Environment: Development
              Project: CloudMart
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: cloudmart-frontend-app
            template:
              metadata:
                labels:
                  app: cloudmart-frontend-app
              spec:
                containers:
                - name: cloudmart-frontend-app
                  image: "{{ frontend_image }}"
                  imagePullPolicy: Always
                  ports:
                  - containerPort: 5001
                  envFrom:
                  - configMapRef:
                      name: cloudmart-frontend-config
                  resources:
                    requests:
                      memory: "128Mi"
                      cpu: "100m"
                    limits:
                      memory: "256Mi"
                      cpu: "300m"
                  readinessProbe:
                    httpGet:
                      path: /
                      port: 5001
                    initialDelaySeconds: 10
                    periodSeconds: 10
                  livenessProbe:
                    httpGet:
                      path: /
                      port: 5001
                    initialDelaySeconds: 20
                    periodSeconds: 30
    
    # Frontend Service
    - name: Create Kubernetes Service for frontend
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: cloudmart-frontend-app-service
            namespace: cloudmart
            labels:
              app: cloudmart-frontend-app
          spec:
            selector:
              app: cloudmart-frontend-app
            ports:
            - port: 80
              targetPort: 5001
              protocol: TCP
            type: LoadBalancer
    
    # Build and Push Docker Images
    - name: Build and push backend Docker image
      block:
        - name: Log in to Amazon ECR
          shell: aws ecr get-login-password --region {{ aws_region }} | docker login --username AWS --password-stdin {{ lookup('env', 'AWS_ACCOUNT_ID') }}.dkr.ecr.{{ aws_region }}.amazonaws.com
        
        - name: Build backend Docker image
          shell: docker build -t {{ backend_image }} {{ backend_dir }}
          
        - name: Push backend image to ECR
          shell: docker push {{ backend_image }}
      
    - name: Build and push frontend Docker image
      block:
        - name: Build frontend Docker image
          shell: docker build -t {{ frontend_image }} {{ frontend_dir }}
          
        - name: Push frontend image to ECR
          shell: docker push {{ frontend_image }}
    
    # Verify deployment
    - name: Wait for backend deployment to be ready
      kubernetes.core.k8s_info:
        api_version: apps/v1
        kind: Deployment
        name: cloudmart-backend-app
        namespace: cloudmart
      register: backend_deployment
      until: backend_deployment.resources[0].status.readyReplicas is defined and backend_deployment.resources[0].status.readyReplicas == 1
      retries: 30
      delay: 10
    
    - name: Wait for frontend deployment to be ready
      kubernetes.core.k8s_info:
        api_version: apps/v1
        kind: Deployment
        name: cloudmart-frontend-app
        namespace: cloudmart
      register: frontend_deployment
      until: frontend_deployment.resources[0].status.readyReplicas is defined and frontend_deployment.resources[0].status.readyReplicas == 1
      retries: 30
      delay: 10
    
    - name: Get frontend service information
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Service
        name: cloudmart-frontend-app-service
        namespace: cloudmart
      register: frontend_service
    
    - name: Display frontend access URL
      debug:
        msg: "CloudMart Frontend will be available at: http://{{ frontend_service.resources[0].status.loadBalancer.ingress[0].hostname | default(frontend_service.resources[0].status.loadBalancer.ingress[0].ip) }}"
      when: frontend_service.resources[0].status.loadBalancer.ingress is defined
