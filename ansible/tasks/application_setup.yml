---
# application_setup.yml - Tasks for setting up application directories and files

- name: Create backend directory
  file:
    path: /home/ec2-user/challenge-day2/backend
    state: directory
    owner: "{{ ec2_username }}"
    group: "{{ ec2_username }}"
    mode: '0755'
    
- name: Create frontend directory
  file:
    path: /home/ec2-user/challenge-day2/frontend
    state: directory
    owner: "{{ ec2_username }}"
    group: "{{ ec2_username }}"
    mode: '0755'
    
- name: Download backend files
  get_url:
    url: https://tcb-public-events.s3.amazonaws.com/mdac/resources/day2/cloudmart-backend.zip
    dest: /home/ec2-user/challenge-day2/backend/cloudmart-backend.zip
    owner: "{{ ec2_username }}"
    group: "{{ ec2_username }}"
    mode: '0644'
  register: backend_download
  
- name: Extract backend files
  unarchive:
    src: /home/ec2-user/challenge-day2/backend/cloudmart-backend.zip
    dest: /home/ec2-user/challenge-day2/backend
    owner: "{{ ec2_username }}"
    group: "{{ ec2_username }}"
    remote_src: yes
  when: backend_download.changed
  
- name: Download frontend files
  get_url:
    url: https://tcb-public-events.s3.amazonaws.com/mdac/resources/day2/cloudmart-frontend.zip
    dest: /home/ec2-user/challenge-day2/frontend/cloudmart-frontend.zip
    owner: "{{ ec2_username }}"
    group: "{{ ec2_username }}"
    mode: '0644'
  register: frontend_download
  
- name: Extract frontend files
  unarchive:
    src: /home/ec2-user/challenge-day2/frontend/cloudmart-frontend.zip
    dest: /home/ec2-user/challenge-day2/frontend
    owner: "{{ ec2_username }}"
    group: "{{ ec2_username }}"
    remote_src: yes
  when: frontend_download.changed
  
- name: Create backend .env file
  copy:
    dest: /home/ec2-user/challenge-day2/backend/.env
    content: |
      PORT=5000
      AWS_REGION={{ aws_region }}
      BEDROCK_AGENT_ID=<seu-bedrock-agent-id>
      BEDROCK_AGENT_ALIAS_ID=<seu-bedrock-agent-alias-id>
      OPENAI_API_KEY=<sua-chave-api-openai>
      OPENAI_ASSISTANT_ID=<seu-id-assistente-openai>
    owner: "{{ ec2_username }}"
    group: "{{ ec2_username }}"
    mode: '0600'
    
- name: Create backend .env_kube file
  copy:
    dest: /home/ec2-user/challenge-day2/backend/.env_kube
    content: |
      PORT=5000
      AWS_REGION={{ aws_region }}
      BEDROCK_AGENT_ID=<seu-bedrock-agent-id>
      BEDROCK_AGENT_ALIAS_ID=<seu-bedrock-agent-alias-id>
      OPENAI_API_KEY=<sua-chave-api-openai>
      OPENAI_ASSISTANT_ID=<seu-id-assistente-openai>
    owner: "{{ ec2_username }}"
    group: "{{ ec2_username }}"
    mode: '0600'
    
- name: Create backend Dockerfile
  copy:
    dest: /home/ec2-user/challenge-day2/backend/Dockerfile
    content: |
      FROM node:18
      WORKDIR /usr/src/app
      COPY package*.json ./
      RUN npm install
      COPY . .
      EXPOSE 5000
      CMD ["npm", "start"]
    owner: "{{ ec2_username }}"
    group: "{{ ec2_username }}"
    mode: '0644'
    
- name: Create frontend .env file
  copy:
    dest: /home/ec2-user/challenge-day2/frontend/.env
    content: |
      VITE_API_BASE_URL=http://{{ public_ip }}:5000/api
    owner: "{{ ec2_username }}"
    group: "{{ ec2_username }}"
    mode: '0644'
    
- name: Create frontend .env_kube file
  copy:
    dest: /home/ec2-user/challenge-day2/frontend/.env_kube
    content: |
      VITE_API_BASE_URL=http://{{ public_ip }}:5000/api
    owner: "{{ ec2_username }}"
    group: "{{ ec2_username }}"
    mode: '0644'
    
- name: Create frontend Dockerfile
  copy:
    dest: /home/ec2-user/challenge-day2/frontend/Dockerfile
    content: |
      FROM node:16-alpine as build
      WORKDIR /app
      COPY package*.json ./
      RUN npm ci
      COPY . .
      RUN npm run build
      FROM node:16-alpine
      WORKDIR /app
      RUN npm install -g serve
      COPY --from=build /app/dist /app
      ENV PORT=5001
      ENV NODE_ENV=production
      EXPOSE 5001
      CMD ["serve", "-s", ".", "-l", "5001"]
    owner: "{{ ec2_username }}"
    group: "{{ ec2_username }}"
    mode: '0644'
    
- name: Build backend Docker image
  docker_image:
    name: "{{ backend_image_name }}"
    build:
      path: "/home/ec2-user/challenge-day2/backend"
    source: build
    tag: "{{ backend_image_tag }}"
  become: yes
  tags: docker

- name: Build frontend Docker image
  docker_image:
    name: "{{ frontend_image_name }}"
    build:
      path: "/home/ec2-user/challenge-day2/frontend"
    source: build
    tag: "{{ frontend_image_tag }}"
  become: yes
  tags: docker

- name: Run backend container
  docker_container:
    name: cloudmart-backend-container
    image: "{{ backend_image_name }}:{{ backend_image_tag }}"
    state: started
    recreate: yes
    published_ports: 
      - "5000:5000"
    env_file: "/home/ec2-user/challenge-day2/backend/.env"
  become: yes
  tags: docker

- name: Run frontend container
  docker_container:
    name: cloudmart-frontend-container
    image: "{{ frontend_image_name }}:{{ frontend_image_tag }}"
    state: started
    recreate: yes
    published_ports: 
      - "5001:5001"
    env_file: "/home/ec2-user/challenge-day2/frontend/.env"
  become: yes
  tags: docker

